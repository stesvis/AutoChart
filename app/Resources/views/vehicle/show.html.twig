{% extends 'base.html.twig' %}

{% block title %}{{ vehicle.year }} {{ vehicle.make }} {{ vehicle.model }}{% endblock %}

{% block stylesheets %}
    <style type="text/css">
        table.customTable {
            width: auto;
        }

        table.customTable > tbody > tr > th {
            padding-right: 50px !important;
        }
    </style>
{% endblock %}

{% block body %}
    <h2>Vehicle: {{ vehicle.year }} {{ vehicle.make }} {{ vehicle.model }}</h2>

    <table class="table table-hover customTable">
        <tbody>
        <tr>
            <th>Maintenance History:</th>
            <td><a href="{{ path('vehicle_service_list', {'id':vehicle.id}) }}">Click here to view</a></td>
        </tr>
        <tr>
            <th>Year:</th>
            <td>{{ vehicle.year }}</td>
        </tr>
        <tr>
            <th>Make:</th>
            <td>{{ vehicle.make }}</td>
        </tr>
        <tr>
            <th>Model:</th>
            <td>{{ vehicle.model }}</td>
        </tr>
        <tr>
            <th>Trim:</th>
            <td>{{ vehicle.trim }}</td>
        </tr>
        <tr>
            <th>Color:</th>
            <td>{{ vehicle.color }}</td>
        </tr>
        <tr>
            <th>Transmission:</th>
            <td>{{ vehicle.transmissionType }}</td>
        </tr>
        <tr>
            <th>Fuel Type:</th>
            <td>{{ vehicle.fuelType }}</td>
        </tr>
        <tr>
            <th>Engine:</th>
            <td>{{ vehicle.engineSize }}</td>
        </tr>
        <tr>
            <th>Passengers:</th>
            <td>{{ vehicle.passengers }}</td>
        </tr>
        <tr>
            <th>Mileage:</th>
            <td>{{ vehicle.mileage }}</td>
        </tr>
        <tr>
            <th>Mileage Type:</th>
            <td>{{ vehicle.mileageType }}</td>
        </tr>
        <tr>
            <th>Description:</th>
            <td>{{ vehicle.description }}</td>
        </tr>
        <tr>
            <th>Purchased On:</th>
            <td>{{ vehicle.purchasedAt|date('F j, Y') }}</td>
        </tr>
        <tr>
            <th>Purchase Price:</th>
            <td>${{ vehicle.price|number_format }}</td>
        </tr>
        <tr>
            <th>Status:</th>
            <td>{{ vehicle.status }}</td>
        </tr>
        </tbody>
    </table>

    <h4>More Vehicle Details</h4>
    <table id="vehicleInfoTable" class="table table-hover">
        <thead>
        <tr>
            <th>Name</th>
            <th>Value</th>
            <th>&nbsp;</th>
        </tr>
        </thead>
        <tbody>
        {% for thisInfo in info %}
            <tr vehicleInfoId="{{ thisInfo.id }}">
                <td>{{ thisInfo.name }}</td>
                <td>{{ thisInfo.value }}</td>
                <td>
                    {#<a href="{{ path('vehicle_show', {'id':vehicle.id}) }}" class="btn btn-xs btn-success"><span#}
                    {#class="fa fa-eye"></span></a>#}
                    <a class="btn btn-xs btn-warning editInfoButton {% if vehicle.status != 'A' %}disabled{% endif %}"
                       vehicleInfoId="{{ thisInfo.id }}" onclick="getVehicleInfoForm({{ thisInfo.id }})"><span
                                class="fa fa-pencil"></span></a>
                    <a class="btn btn-xs btn-danger deleteVehicleInfo {% if vehicle.status != 'A' or thisInfo.status != 'A' %}disabled{% endif %}"
                       vehicleId="{{ thisInfo.vehicle.id }}"
                       vehicleInfoId="{{ thisInfo.id }}"
                       title="Delete this Vehicle"
                       ng-click="showConfirm($event, {{ vehicle.id }})">
                        <span class="fa fa-trash"></span></a>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <div id="vehicleInfoFormDialog" title="New Vehicle Info" style="display: none;">
        <p>Please add vehicle details that you may need in the future (tire size, motor oil type, door lock code
            etc.)</p><br>
        <div id="infoForm">
        </div>
    </div>

    <div id="dialog" title="Delete the Vehicle?" style="display: none;">
        <p></p>
    </div>
{% endblock %}

{% block rightSidebar %}
    <a
            id="editVehicleButton"
            href="{{ path('vehicle_edit', {'id':vehicle.id}) }}"
            class="btn btn-warning btn-block {% if vehicle.status == 'D' %}disabled{% endif %}"
            role="button">Edit</a>
    <a
            id="deleteVehicleButton"
            {#href="{{ path('vehicle_delete', {'id':vehicle.id}) }}"#}
            class="btn btn-danger btn-block {% if vehicle.status == 'D' %}disabled{% endif %}"
            role="button">Delete</a>
    <a
            href="{{ path('vehicle_new') }}"
            class="btn btn-success btn-block"
            role="button">New</a>
    <br/>
    <a
            {#href="{{ path('') }}"#}
            id="newInfoButton"
            class="btn btn-default btn-block {% if vehicle.status == 'D' %}disabled{% endif %}"
            role="button">Add Details</a>
    <br/>
    <a
            id="newServiceButton"
            href="{{ path('service_new') }}"
            class="btn btn-default btn-block {% if vehicle.status == 'D' %}disabled{% endif %}"
            role="button">New Service</a>
{% endblock %}

{% block javascripts %}

    <script type="text/javascript">
        var infoFormDialog = null;

        $(document).ready(function () {

            var name = $("#app_bundle_vehicle_info_name"),
                value = $("#app_bundle_vehicle_info_value"),
                allFields = $([]).add(name).add(value);
            var form = null;

            // Store the dialog in a variable
            infoFormDialog = $('#vehicleInfoFormDialog').dialog({
                modal: true,
                autoOpen: false,
                width: 400,
                open: function (event, ui) {
                    form = infoFormDialog.find("form");

                    form.on("submit", function (event) {
                        event.preventDefault();
                        saveVehicleInfo(infoFormDialog, form);
                    });
                },
                buttons: {
                    Save: function () {
                        saveVehicleInfo(infoFormDialog, form);
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                },
                close: function () {
//                    form[0].reset();
                    allFields.removeClass("ui-state-error");
                }
            });

            // Open the dialog when the button is clicked
            $('#newInfoButton').click(function () {
                getVehicleInfoForm();
//                infoFormDialog.dialog("open");
            });

            $('#deleteVehicleButton').click(function () {
                $("#dialog").find("p").html('<span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>This Vehicle will be permanently deleted and cannot be recovered. Are you sure?');
                openDeleteDialog("#dialog", "Delete the Vehicle?", "/vehicles/" + {{ vehicle.id }}, afterDeleteVehicle, {{ vehicle.id }});
            });

            $(document).on('click', '.deleteVehicleInfo', function () {
                var vehicleInfoId = $(this).attr('vehicleInfoId');

                $("#dialog").find("p").html('' +
                    '<span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>' +
                    'This Detail will be permanently removed from the Vehicle and cannot be recovered. Are you sure?');

                openDeleteDialog("#dialog", "Delete the Detail?", "/vehicle_info/" + vehicleInfoId, afterDeleteInfo, vehicleInfoId);
            });

        });

        /**
         * Gets the right form for editing or adding a new VehicleInfo object
         * @param id 0 for newAction, >0 for editAction
         */
        function getVehicleInfoForm(id) {

            $("#loading").show();

            var url = '';

            if (id > 0) {
                // this will be an edit
                url = '{{ path('vehicle_info_edit', {'id':'PLACEHOLDER'}) }}';
                url = url.replace('PLACEHOLDER', id);
            }
            else {
                // id=0 means new record
                url = '{{ path('vehicle_info_new') }}';
            }

            /**
             * Make a GET call to either the editAction or newAction
             */
            $.ajax({
                type: 'GET',
                url: url,
                data: id,
                statusCode: {
                    404: function () {
                        message = 'Page not found.';
                    }
                },
                success: function (data) {
                    $("#loading").hide();

//                    console.log(data);

                    // add the form to the dialog
                    infoFormDialog.find('#infoForm').html(data);
                    infoFormDialog.find('#infoForm').attr('vehicleInfoId', id);
                    infoFormDialog.dialog("open");
                },
                error: function (data) {
                    $("#loading").hide();

//                    console.log(data);

                    infoFormDialog.find('#infoForm').html(data['message']);
                    infoFormDialog.dialog("open");
                },
            });
        }

        /**
         * Disables other buttons that depend on an active Vehicle
         * @param id
         */
        function afterDeleteVehicle(id) {
            $('#deleteVehicleButton').addClass('disabled');
            $('#editVehicleButton').addClass('disabled');

            $('#newInfoButton').addClass('disabled');
            $('#newServiceButton').addClass('disabled');
            $('.deleteVehicleInfo').addClass('disabled');
        }

        /**
         * Disables other buttons that depend on an active VehicleInfo
         * @param id The VehicleInfo.Id that has been deleted
         */
        function afterDeleteInfo(id) {
            $('.deleteVehicleInfo[vehicleInfoId=' + id + ']').addClass('disabled');
            $('.deleteVehicleInfo[vehicleInfoId=' + id + ']').prev().addClass('disabled');
        }


        function saveVehicleInfo(infoDialog, form) {

            var formSerialize = form.serialize();
            var message = '';

            infoDialog.dialog("close");
            $("#loading").show();

            var url = '';
            var vehicleInfoId = infoDialog.find('#infoForm').attr('vehicleInfoId');

            if (vehicleInfoId > 0) {
                // this will be an edit
                url = '{{ path('vehicle_info_edit', {'id':'PLACEHOLDER'}) }}';
                url = url.replace('PLACEHOLDER', vehicleInfoId);
            }
            else {
                // id=0 means new record
                url = '{{ path('vehicle_info_new') }}';
            }
            console.log(url);
            console.log(formSerialize);

            /**
             * Make a POST call to either the editAction or newAction
             */
            $.ajax({
                type: 'POST',
                url: url,
                data: formSerialize,
                dataType: 'JSON',
                statusCode: {
                    404: function () {
                        message = 'Page not found.';
                    },
                    500: function () {
                        message = 'Server error.';
                    }
                },
                success: function (data) {
                    console.log('Success: ' + data);
                    $("#loading").hide();

                    if (data['success'] == true) {
                        if (vehicleInfoId > 0) {
                            $('tr[vehicleInfoId=' + vehicleInfoId + '] > td:eq(0)').text(data['infoName']);
                            $('tr[vehicleInfoId=' + vehicleInfoId + '] > td:eq(1)').text(data['infoValue']);
                        }
                        else {
                            $('#vehicleInfoTable tr:last').after(getInfoTableRow(data['infoId'], data['infoName'], data['infoValue']));

                        }
                    }
                    else {
                        infoDialog.html('<p>' + data['message'] + '</p>');
                        infoDialog.dialog({
                            buttons: {
                                Close: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                },
                error: function (data) {
                    console.log('Error:');
                    console.log(data);

                    $("#loading").hide();

                    infoDialog.html('<p>' + data['message'] + '</p>');
                    infoDialog.dialog({
                        buttons: {
                            Close: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                },
            });
        }

        function getInfoTableRow(id, name, value) {
            return '' +
                '<tr vehicleInfoId="' + id + '>' +
                '<td>' + name + '</td>' +
                '<td>' + value + '</td>' +
                '<td>' +
                '    <a class="btn btn-xs btn-warning editInfoButton {% if vehicle.status != 'A' %}disabled{% endif %}" vehicleInfoId="' + id + '" onclick="getVehicleInfoForm(' + id + ')">' +
                '   <span class="fa fa-pencil"></span></a>' +
                '   <a class="btn btn-xs btn-danger deleteVehicleInfo {% if vehicle.status != 'A' %}disabled{% endif %}" vehicleInfoId="' + id + '" vehicleId="{{ vehicle.id }}" title="Delete this Vehicle" ng-click="showConfirm($event, {{ vehicle.id }})">' +
                '   <span class="fa fa-trash"></span></a>' +
                '</td>' +
                '</tr>';
        }

    </script>

{% endblock %}
